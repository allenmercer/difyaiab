# Stage to Deploy Dify Agent Builder
stages:
  ############################################################
  ### Stage to Deploy Dify Agent Builder                   ###
  ############################################################
  - stage: deployDifyAgentBuilder
    # The stage displayName is not displayed in ADO but can be used for documentation purposes.
    displayName: 'Deploy Dify Agent Builder'
    #trigger: manual
    jobs:
      - deployment: deployDifyAgentBuilder
        # The deployment displayName is displayed in ADO under Jobs.
        displayName: 'Deploy Dify Agent Builder'
        pool:
          vmImage: 'ubuntu-latest'
        # This is the environment in ADO where the results of this job will be displayed.
        environment: 'adoenv-$(AZURE_PROJECT_NAME)-$(AZURE_PROJECT_LE)-$(AZURE_RG_LOCATION)-$(AZURE_PROJECT_INSTANCE)'
        strategy:
          runOnce:
            deploy:
              steps:
                # Checkout GitHub Repository
                - checkout: self
                  # dispalyName: 'Checkout GitHub Repository'
                # Azure Resource Login Step.
                - task: AzureCLI@2
                  # The step display name will be displayed in ADO in the DOS window in light green.
                  displayName: 'Azure Resource Login'
                  inputs:
                    azureSubscription: '$(AZURE_SERVICE_SPN)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      set -e  # Fail if any command fails
                      echo "Logging into Azure..."
                      az login --service-principal --username "$(AZURE_CLIENT_ID)" --password "$(AZURE_CLIENT_SECRET)" --tenant "$(AZURE_TENANT_ID)"
                      az account set --subscription "$(AZURE_SUBSCRIPTION_ID)"
                      az account show
                      echo "Azure login successful"
                      echo ""
                      echo "Setting up Kubernetes credentials..."
                      AZURE_AKSCLUSTER_NAME="aks-$(AZURE_PROJECT_NAME)-$(AZURE_PROJECT_LE)-$(AZURE_RG_LOCATION)-$(AZURE_PROJECT_INSTANCE)"
                      az aks get-credentials --admin --name $AZURE_AKSCLUSTER_NAME --resource-group $(AZURE_RG_NAME)
                      cat /home/vsts/.kube/config
                      echo "Kubernetes credential setup successful"
                      ADO_AGENT_IP=$(curl -L ipconfig.me | xargs)
                      az aks update --name $AZURE_AKSCLUSTER_NAME -g $(AZURE_RG_NAME) --api-server-authorized-ip-ranges "128.85.200.44/32, $ADO_AGENT_IP/32"
                # Deploy Dify AI
                - task: AzureCLI@2
                  displayName: 'Deploy Dify AI'
                  inputs:
                    azureSubscription: '$(AZURE_SERVICE_SPN)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      set -e  # Fail if any command fails
                      echo "Deploying Dify AI..."
                      # Deploy Dify AI
                      cd service-dify-ai
                      echo ""
                      echo "Deploying Dify AI kubernetes..."
                      kubectl apply -f dify-ai01-deployment.yaml
                      echo ""
                      echo "Deploying Dify AI ingress route to kubernetes..."
                      DIFYAI_URL_DOMAIN="$(AZURE_PROJECT_NAME)$(AZURE_PROJECT_LE)$(AZURE_RG_LOCATION)$(AZURE_PROJECT_INSTANCE)"
                      sed "s/__DIFYAI_URL_DOMAIN__/$DIFYAI_URL_DOMAIN/" dify-ai02-ingress.yaml > dify-ai02-ingress_aks.yaml
                      kubectl apply -f dify-ai02-ingress_aks.yaml
                      echo ""
                      echo "Cleaning up files..."
                      rm -rf dify-ai02-ingress_aks.yaml
                      TRAEFIK_IP=$(kubectl get service -n traefik | grep traefik | grep LoadBalancer | awk '{print $4}' | xargs)
                      DIFYAI_URL_FULL="difyai.$DIFYAI_URL_DOMAIN.com"
                      echo ""
                      echo "Add the following line to you hosts file:"
                      echo "$TRAEFIK_IP $DIFYAI_URL_FULL"
                      echo "Task Successful"
                # Deploy Dify Agent Builder API
                - task: AzureCLI@2
                  displayName: 'Deploy Dify Agent Builder API'
                  inputs:
                    azureSubscription: '$(AZURE_SERVICE_SPN)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      set -e  # Fail if any command fails
                      echo "Deploying Dify Agent Builder API..."
                      # Deploy Dify Agent Builder API
                      echo ""
                      echo "Building Dify Agent Builder API docker image..."
                      echo "    BuildID: $(Build.BuildId)"
                      # Updated service-ai-agents Dockerfile to copy this file to the container image.
                      echo $(Build.BuildId) > service-ai-agents/ado_build_version.txt
                      docker build -f service-ai-agents/Dockerfile -t difyab-api .
                      echo ""
                      echo "List docker images and build number..."
                      docker image ls
                      echo $(Build.BuildId)
                      echo ""
                      echo "Running Dify Agent Builder API docker image..."
                      docker run -d --name difyab-api -p 8080:8000 \
                      -e LLM_API_KEY=6ccab1fbe41d4194b7bde6d99fb05965 \
                      -e LLM_URL=https://ank-ai-dev.openai.azure.com/ \
                      -e LLM_MODEL=gpt-4o \
                      -e LLM_API_VERSION=2024-10-21 \
                      -e DIFY_BACKEND=http://dify-nginx.diffy \
                      difyab-api
                      #docker run -d -p 8080:8000 difyab-api
                      echo ""
                      echo "Testing Dify Agent Builder API docker image..."
                      COUNTER=0
                      DOCKER_DIFYABAPI_STATUS=$((docker container inspect difyab-api || true) | jq -r '.[0].State.Status' | xargs)
                      until [[ $DOCKER_DIFYABAPI_STATUS == "running" ]]; do
                        if [ "$COUNTER" -ge 24 ]; then exit 1; fi
                        echo "    Waiting for docker difyab-api container..."
                        sleep 5
                        COUNTER=$[$COUNTER +1]
                        DOCKER_DIFYABAPI_STATUS=$((docker container inspect difyab-api || true) | jq -r '.[0].State.Status' | xargs)
                      done
                      docker container ls
                      sleep 10
                      curl --connect-timeout 15 --max-time 30 http://localhost:8080
                      curl -s --connect-timeout 15 --max-time 30 http://localhost:8080 -o /dev/null -w '%{http_code}' | grep 200
                      echo ""
                      echo "Stopping Dify Agent Builder API docker image..."
                      docker container ls
                      docker container rm $(docker container ls | grep difyab-api | awk '{print $1}') --force
                      echo ""
                      echo "Tagging Dify Agent Builder API docker image..."
                      AZURE_CR_NAME="cr$(AZURE_PROJECT_NAME)$(AZURE_PROJECT_LE)$(AZURE_RG_LOCATION)$(AZURE_PROJECT_INSTANCE)"
                      AZURE_CR_URL=$(az acr show --resource-group $AZURE_RG_NAME --name $AZURE_CR_NAME | jq -r '.loginServer' | xargs)
                      docker tag difyab-api $AZURE_CR_URL/v2/dify-poc/difyab-api:1.1.$(Build.BuildId)
                      docker tag difyab-api $AZURE_CR_URL/v2/dify-poc/difyab-api:latest
                      echo ""
                      echo "Pushing Dify Agent Builder API docker image..."
                      docker login https://$AZURE_CR_URL -u $(az acr credential show -n $AZURE_CR_NAME | jq -r '.username') -p $(az acr credential show -n $AZURE_CR_NAME | jq -r '.passwords[0]|.value')
                      docker push --all-tags $AZURE_CR_URL/v2/dify-poc/difyab-api
                      echo ""
                      echo "Deploying Dify Agent Builder API to kubernetes..."
                      sed "s/__AZURE_CR_URL__/$AZURE_CR_URL/" service-ai-agents/ai-agents01-deployment.yaml > service-ai-agents/ai-agents01-deployment_aks.yaml
                      kubectl apply -f service-ai-agents/ai-agents01-deployment_aks.yaml
                      echo ""
                      echo "Deploying Dify Agent Builder ingress route to kubernetes..."
                      DIFYAI_URL_DOMAIN="$(AZURE_PROJECT_NAME)$(AZURE_PROJECT_LE)$(AZURE_RG_LOCATION)$(AZURE_PROJECT_INSTANCE)"
                      sed "s/__DIFYAI_URL_DOMAIN__/$DIFYAI_URL_DOMAIN/" service-ai-agents/ai-agents02-ingress.yaml > service-ai-agents/ai-agents02-ingress_aks.yaml
                      kubectl apply -f service-ai-agents/ai-agents02-ingress_aks.yaml
                      echo ""
                      echo "Cleaning up files..."
                      rm -rf service-ai-agents/ai-agents01-deployment_aks.yaml
                      rm -rf service-ai-agents/ai-agents02-ingress_aks.yaml
                      echo "Task Successful"
  ############################################################
  ### END Stage to Deploy Dify Agent Builder               ###
  ############################################################
