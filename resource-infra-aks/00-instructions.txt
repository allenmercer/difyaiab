An "Environment" is an environment in ADO.
A "Lifecycle Environment" can be POC, DEV, PROD, etc.

Create a new Environment in ADO for EVERY Lifecycle Environment that you plan to depoly.
Name the Environment with adoenv-<AZURE_PROJECT_NAME>-<AZURE_PROJECT_LE>-<AZURE_RG_LOCATION><AZURE_PROJECT_INSTANCE>
e.g. adoenv-difyaiab-dev-eastus2-001
Environments will contain the lifecycle environment so that we can view the deployment of each lifecycle separately.

Create a new Variable Group in ADO.
Name the Variable Group with adovg-<AZURE_PROJECT_NAME>-<AZURE_PROJECT_LE>-<AZURE_RG_LOCATION><AZURE_PROJECT_INSTANCE>
e.g. adovg-difyaiab-dev-eastus2-001-resource-inf-aks

Create variables:
AZURE_RG_NAME               difyai-agent-builder-poc                    The EXISTING resource group name that has been provided to us.
# AZURE_RG_LOCATIONS seems redundant because it can be derrived from AZURE_RG_NAME but is necessary for Storage Account creation.
# In the future AZURE_RG_NAME will be derived from other variables so AZURE_RG_LOCATION will be necessary anyways.
AZURE_RG_LOCATION           eastus2                                     Necessary for creating storage account.
AZURE_CLIENT_ID             f6b25cc8-5fc1-448b-b798-e8ad1045647c        Make this value secret with the lock button.
AZURE_CLIENT_SECRET                                                     Make this value secret with the lock button.
AZURE_TENANT_ID             78e9dcbe-e650-488b-9f16-902c90e8ff5f        Make this value secret with the lock button.
AZURE_SUBSCRIPTION_ID       7c85ee7e-a3a7-4a96-8952-94b2ea0b1c95        Make this value secret with the lock button.
AZURE_PROJECT_NAME          difyaiab                                    Unique name for the service.  e.g. dify ai agent builder 
# Variable below this line should rarely be touched.
AZURE_PROJECT_INSTANCE      001                                         Unique instance for the service.  e.g. 001
# We define the lifecycle environment names here and then assign ENVIRONMENT to one of the variables below in the pipeline.
# That way we can use the same pipeline for multi-lifecycle deployments.
AZURE_PROJECT_LE            dev                                         Azure project lifecycle environment.
AZURE_SERVICE_SPN           global-azdo-spn                             Found under Azure Enterprise Applications and App registrations.
REPO_TFMANIFEST_FOLDER      resource-infra-aks/terraform-manifests      Location of the Terraform files in the repo.
REPO_KUBMANIFEST_FOLDER     resource-infra-aks/kubernetes-manifests     Location of the Kubernetes files in the repo.
REPO_SVCINFRAWHOAMI_FOLDER  resource-infra-aks/service-infra-whoami     Location of the service-infra-whoami folder for cluster testing.
PROM_HELM_VERSION           69.8.0                                      Prometheus Helm Chart Version
TRAEFIK_HELM_VERSION        34.4.1                                      Traefik Helm Chart Version

Create a new Pipeline in ADO.
Choose your GitHub Repo and pipeline-aks-deployment.yml file.
Save the pipeline.  DO NOT run the pipeline.
Click Edit.  Then Triggers.
On the YAML tab, Name the Pipeline in ADO.
Name the Pipeline with adopl-<AZURE_PROJECT_NAME>-<AZURE_PROJECT_LE>-<AZURE_RG_LOCATION><AZURE_PROJECT_INSTANCE>.
e.g. difyaia-global-resource-infra-aks
Then save the pipeline.
Under "Get sources" you can choose your branch and repo and other cool stuff.
Under Triggers, add you triggers for CI and Pull Requests.
Save again.

Modify resource-infra-aks/terraform-manifests/02-variables.tf with your custom variables for the resources.
In the "locals tags" section, leave the "# BEGIN ST TAGS" and "# END ST TAGS" comments in place.
These comments are used by the pipeline to pull tags when creating the Storage Account.
The tags below the "# END ST TAGS" are also added to the Storage Account, however the Pipeline already has the values.
Note that the variables at the bottom of the file have no "default" values.  They are injected into the Terraform command in the Pipeline.