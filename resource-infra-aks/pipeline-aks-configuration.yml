# Define Variables
variables:
  - group: difyaiab-global-resource-infra-aks
  - name: LIFECYCLE_ENVIRONMENT
    value: '$(ADO_DEV_ENVIRONMENT)'

# Stage to Configure AKS Cluster
stages:
  - stage: configureAKSCluster
    # The stage displayName is not displayed in ADO but can be used for documentation purposes.
    displayName: 'Configure AKS Cluster'
    #trigger: manual
    jobs:
      - deployment: configureAKSCluster
        # The deployment displayName is displayed in ADO under Jobs.
        displayName: 'Configure AKS Cluster'
        pool:
          vmImage: 'ubuntu-latest'
        # This is the environment in ADO where the results of this job will be displayed.
        environment: difyaiab-$(LIFECYCLE_ENVIRONMENT)-resource-infra-aks
        strategy:
          runOnce:
            deploy:
              steps:
                # Checkout GitHub Repository
                - checkout: self
                  # dispalyName: 'Checkout GitHub Repository'
                # Azure Resource Login Step.
                - task: AzureCLI@2
                  # The step display name will be displayed in ADO in the DOS window in light green.
                  displayName: 'Azure Resource Login'
                  inputs:
                    azureSubscription: '$(AZURE_SERVICE_SPN)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      set -e  # Fail if any command fails
                      echo "Logging into Azure..."
                      az login --service-principal --username "$(AZURE_CLIENT_ID)" --password "$(AZURE_CLIENT_SECRET)" --tenant "$(AZURE_TENANT_ID)"
                      az account set --subscription "$(AZURE_SUBSCRIPTION_ID)"
                      az account show
                      echo "Azure login successful"
                      echo ""
                      echo "Setting up Kubernetes credentials..."
                      AZURE_AKSCLUSTER_NAME="aks-$(AZURE_PROJECT_NAME)-$(LIFECYCLE_ENVIRONMENT)-$(AZURE_RG_LOCATION)-$(AZURE_PROJECT_INSTANCE)"
                      az aks get-credentials --admin --name $AZURE_AKSCLUSTER_NAME --resource-group $(AZURE_RG_NAME)
                      cat /home/vsts/.kube/config
                      echo "Kubernetes credential setup successful"
                # Install Traefik Step
                - task: AzureCLI@2
                  displayName: 'Install Traefik'
                  inputs:
                    azureSubscription: '$(AZURE_SERVICE_SPN)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      set -e  # Fail if any command fails
                      echo "Installing Traefik..."
                      # Install Traefik Manifests
                      cd $(REPO_KUBMANIFEST_FOLDER)/traefik
                      kubectl apply -f traefik01-ns.yaml
                      kubectl apply -f traefik02-crd.yaml
                      kubectl apply -f traefik03-crd-rbac.yaml
                      kubectl apply -f traefik04-dashboard-secret.yaml
                      kubectl apply -f traefik05-dashboard-middleware.yaml
                      # Install Traefik Helm Chart
                      helm repo add traefik https://traefik.github.io/charts
                      helm repo update
                      # helm search repo traefik/traefik --versions
                      helm upgrade --install --version $(TRAEFIK_HELM_VERSION) --namespace=traefik traefik traefik/traefik --values=traefik-chart-values.yaml
                      # Get Traefik
                      TRAEFIK_IP=$(kubectl get service -n traefik | grep traefik | grep LoadBalancer | awk '{print $4}' | xargs)
                      until [[ $TRAEFIK_IP != "<pending>" ]]; do
                        echo "    Waiting for traefik ip..."
                        sleep 2
                        TRAEFIK_IP=$(kubectl get service -n traefik | grep traefik | grep LoadBalancer | awk '{print $4}' | xargs)
                      done
                      echo "    Traefik IP: $TRAEFIK_IP"
                      echo "Traefik install successful"
